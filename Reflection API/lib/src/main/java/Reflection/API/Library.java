/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Reflection.API;

import java.lang.reflect.InvocationTargetException;
import java.util.Arrays;

class User{
	private int id;
	@Override
	public String toString() {
		return "id=" + id + ", nam=" + nam + " ";
	}
	private String nam;
}

class Employee extends User{
	static int h;
	@Override
	public String toString() {
		
		return super.toString()+"name=" + name + "";
	}
	private String name;
	public void calc() {System.out.println("Calc() called");}
}

public class Library {
    public static void main(String args[]) throws ClassNotFoundException, NoSuchFieldException, SecurityException, NoSuchMethodException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {
    	var c=Employee.class;
    	System.out.println(c);
//    	var d=Class.forName("Reflection.API.Employee");
//    	System.out.println(d);
//    	Employee e=new Employee();
//    	var f=e.getClass();
//    	System.out.println(f);
    	
//    	System.out.println(Arrays.asList(c.getFields()));
//    	System.out.println(Arrays.asList(c.getDeclaredFields()));
//    	Arrays.asList(c.getMethods()).forEach(System.out::println);
//    	Arrays.asList(c.getDeclaredMethods()).forEach(System.out::println);
    	
    	var f=Employee.class;
//    	var n=f.getDeclaredField("a");
//    	System.out.println(n);
//    	
//    	var m=f.getDeclaredMethod("calc");
//    	System.out.println(m);
    	
//    	var method=f.getDeclaredMethod("calc");
//    	method.invoke(new Employee());
    	
    	var name=f.getDeclaredField("name");
    	var emp=new Employee();
    	name.setAccessible(true);
    	name.set(emp, "Hasrsh");
    	System.out.println(emp);
    }
}
